services:

  app:
    build:
      context: .
      dockerfile: docker/dockerfiles/app.dockerfile
      target: production
      args:
        USER_ID: ${USER_ID:-0}
        GROUP_ID: ${GROUP_ID:-0}
        RAILS_MASTER_KEY: ${RAILS_MASTER_KEY}
      tags:
        - "ruby-challenge.app.prod:latest"
    depends_on:
      - db
      - redis
    entrypoint: /docker/entrypoints/app-entrypoint.sh
    restart: always
    stop_grace_period: "3s"
    env_file:
      - docker/.env.production

  db:
    image: postgres:16.2
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    restart: always
    env_file:
      - ./docker/.env.production

  redis:
    image: redis:7.2
    restart: always
    stop_grace_period: "3s"

  web:
    build:
      context: .
      dockerfile: docker/dockerfiles/web.dockerfile
      args:
        SERVER_NAME: ${SERVER_NAME}
      tags:
        - "ruby-challenge.web.prod:latest"
    depends_on:
      - app
    restart: always
    ports:
      - 80:8000
    env_file:
      - ./docker/.env.production
